
/**********************************************
 * this is a summary of how to test ldap_user manually.
 * it attempts to cover all facets of the automated simpletests
 **********************************************/

1. Remove remnants of existing ldap_user install: 
- Disable and uninstall ldap_user module.
- Clear any variables that may not have been uninstalled:
   DELETE FROM variable where name like 'ldap_user%'
- Delete the user(2) you use for testing.
- Clear watchdog logs.

# drush 5 commands for 1.
drush -y pm-disable ldap_authorization_drupal_role  
drush -y pm-uninstall ldap_authorization_drupal_role
drush -y pm-disable ldap_authorization_og 
drush -y pm-uninstall ldap_authorization_og
drush -y pm-disable ldap_authorization
drush -y pm-uninstall ldap_authorization
drush -y pm-disable ldap_sso
drush -y pm-uninstall ldap_sso
drush -y pm-disable ldap_authentication
drush -y pm-uninstall ldap_authentication
drush -y pm-disable ldap_user
drush -y pm-uninstall ldap_user
drush -y sql-query "DELETE FROM variable where name like 'ldap_user%'"
drush -y watchdog-delete all


2. Enable LDAP User module and create Drupal user test fields
- Enable ldap_user module and check watchdog logs
- Prepare user settings/entity for testing
  -- add field_lname, field_fname, field_dept, and field_display_name text fields to Drupal user
  
# drush 5 commands for 2.
drush -y pm-enable ldap_user
drush watchdog-show
drush field-create user field_user_dept,text,text_textfield --entity_type=user
drush field-create user field_user_lname,text,text_textfield --entity_type=user
drush field-create user field_user_fname,text,text_textfield --entity_type=user
drush field-create user field_user_display_name,text,text_textfield --entity_type=user  

================================================================
6. Tests for LDAP Entry to Drupal User Provisioning
================================================================
6.A. Setup: Configure LDAP User for Provisioning Drupal Account from LDAP Entry (admin/config/people/ldap/user)
    A. LDAP Servers Providing Provisioning Data: Select enabled server
    B. Drupal Account Provisioning Events: [x] Create or Synch to Drupal user anytime a Drupal user account is created or updated.
    C. Existing Drupal User Account Conflict: [x] Associate Drupal account with LDAP Entry
    D. Application of Drupal Account settings to LDAP Authenticated Users: [x] Account Creating Settings ... do not affect...
    E. Basic Provisioning to LDAP Settings: for server, select "none"
    F. Rest Webservice: leave disabled
    G. Server mappings section. Provisioning from LDAP to Drupal mapppings. (Source LDAP Tokens will vary from ldap to ldap)
       i. [givenname] -- to drupal user -> Field: First Name [x] on drupal user creation [x] on synch...
       ii. [sn:0] -- to drupal user -> Field: Last Name [x] on drupal user creation [x] on synch...
       iii. [givenname] [sn] -- to drupal user -> Field: Display Name [x] on drupal user creation [x] on synch...
       iv. Physics -- to drupal user -> Field: Department [x] on drupal user creation [x] on synch...
   
6.B. Event: Drupal user create provision/synching.
    A. Create new user via admin/people/create [drush user-create jdoe --mail=test@test.com --password="sdfw3452352se"]
    B. field_lname, field_fname, field_dept, and field_display_name should be visible and populated
    C. goto admin/config/people/ldap/user/test enter the username and hit the test button.  this will show the user object and entity
       [drush user-information jdoe --full]
       if the devel module is enabled. In "user object (before provisioning or synching)"
       i.     user object->ldap_user_puid_sid should be the id of the server
       ii.    user object->ldap_user_puid should be the value of the puid attribute
       iii.   user object->ldap_user_puid_property  should be the name of the puid attribute
       iv.    user object->ldap_user_current_dn should be the dn of the ldap entry
       v.     user object->mail and init should be correct, matching email
       vii.   user authmap should be empty.  this record is only generated when account created via ldap authentication
 
6.C. Event: user logon/authenticate.  Test create drupal account.
    enable ldap authentication, mixed mode
    A.1. Change "Drupal Account Provisioning Options to only "on successful authentication"
    A.2. Authenticate with a user not in drupal (be sure user is deleted before test)
    B. view the user from the user list (admin/people/people) and make sure
         field_lname, field_fname, field_dept, and field_display_name should be visible and populated
    C. goto admin/config/people/ldap/user/test/<username> and hit the test button.  this will show the user object and entity
       if the devel module is enabled
       i.     user object->ldap_user_puid_sid should be the id of the server
       ii.    user object->ldap_user_puid should be the value of the puid attribute
       iii.   user object->ldap_user_puid_property  should be the name of the puid attribute
       iv.    user object->ldap_user_current_dn should be the dn of the ldap entry
       v.     user object->mail and init should be correct, matching email
       vii.   user authmap should have an entry where module=ldap_authentication and authname=username
    D. Manually change last name of user and save.
    E. Log user in again.
    F. FAILED: Last Name should revert to LDAP provided last name.
       
       
       
7. General tests ldap entry provisioning
    A. in ldap user settings (admin/config/people/ldap/user)
      - uncheck BASIC PROVISIONING TO DRUPAL ACCOUNT SETTINGS settings
      - enable an ldap server in BASIC PROVISIONING TO LDAP SETTINGS
      - check both "LDAP Entry Provisioning Options"
      - disable REST webservice
      - in mappings table (alter to fit your LDAP)
        -- [dn], 'to LDAP entry', 'user tokens', [x] on user creation, [x] on user update/save
             user tokens should be an expression that evaluates to a dn such as:
             "cn=[property.name],ou=people,dc=ldap,dc=mycompany,dc=com" or
             "cn=[field.field_lname], [field.field_fname],ou=people,dc=ldap,dc=mycompany,dc=com"
        -- [cn], 'to LDAP entry', 'Property: Username', [x] on user creation, [x] on user update/save
        -- [displayname], 'to LDAP entry', user tokens, [x] on user creation, [x] on user update/save, [field.field_fname] [field.field_lname]
        -- [guid], 'to LDAP entry', user tokens, [x] on user creation, mydrupalsite.com[property.uid]
        -- [provisioned], 'to LDAP entry', user tokens, [x] on user creation, drupal_intranet (note this is a constant)
           
    B.  Create and approve new user, populating first and last name.
        -- confirm that ldap entry exists with proper attributes
        
    C.  Change lastname and first name and save user
        -- confirm that appropriate attributes were changed in ldap entry
        
    D.  Delete user in drupal.
        -- confirm that ldap entry for user is removed.
        
    E.  
  
       
7.1 Test ldap entry provisioning workflow: User requests account -> admin approves it -> and user gets one time logon and sets password
  A. Setup (as admin):
    -- at admin/config/people/accounts: select "Visitors" and check "Require e-mail verification"
    -- configure to ldap provisioning admin/config/people/ldap/user
      -- [x] Create LDAP entry when a Drupal Account has a status of approved... in "LDAP Entry Provisioning Options"
      -- [x] Update LDAP entry when Drupal Account that has a corresponding LDAP entry is updated...in "LDAP Entry Provisioning Options"
      -- map required fields and make sure password is one of the fields
  B. Test
     -- as anonymous user: create user at user/register.  account will be created with user entered password.
     -- as admin: approve user at user/<uid>/edit
     -- desired result: ldap entry should be created, but ldap entry password will be none or random.
     -- as user: click on user email link with reset e.g. user/reset/1524/..../.....
     -- as user: set password and whatever initial user profile or fields you want
     -- desired result: check that ldap entry has correct password.
               
  
  
7.2 Test ldap entry provisioning workflow: Admin creates account that has a status of 1, but user requests new password to get started.
 



8. Test admin/people/create form and LDAP Options.
  8.1 Test validation of existing ldap user admin/people/create form
    A. Setup.  Enable and configure Drupal to LDAP provisioning of users.
        On MANUAL DRUPAL ACCOUNT CREATION AND UPDATES, select "Show option on user create form".
    B. Attempt to create user at admin/people/create with a username that conflicts with existing ldap entry.
       Check "create corresponding ldap entry" on form.
    C. Success: On form submit, error should indicate ldap user exists.
    
  8.2 Test manual selection of ldap associate in admin/people/create form
    A. Setup.  On admin/config/people/ldap/user, set Existing Drupal User Account Conflict to "Don't associate"
       On MANUAL DRUPAL ACCOUNT CREATION AND UPDATES, select "Show option on user create form".
    B. at admin/people/create select "Make this an ldap associated account".
    C. Success: in ldap user,
       fields: ldap_user_puid_sid, ldap_user_current_dn, ldap_user_puid, ldap_user_puid_property should be populated if in use
       other synch and provision fields should not be synched
       in the database in the authmaps table, a record should exist with module=ldap_user and authname=<username tested>
    
  8.3 Test manual selection of ldap associate AND "Create corresponding LDAP Entry" in admin/people/create form
    A. Setup.  On admin/config/people/ldap/user, set Existing Drupal User Account Conflict to "Don't associate"
       On MANUAL DRUPAL ACCOUNT CREATION AND UPDATES, select "Show option on user create form".
       Configure provisioning to ldap on admin/config/people/ldap/user
    B. Manually create user that is not in ldap already.
       Select: "Make this an ldap associated account"
       Check: "create corresponding ldap entry"
       submit
    C. Success:
         ldap entry exists,
         drupal user exists,
         fields: ldap_user_puid_sid, ldap_user_current_dn, ldap_user_puid, ldap_user_puid_property should be populated if in use
         in the database in the authmaps table, a record should exist with module=ldap_user and authname=<username tested>
  8.4 Test manual selection of "Create corresponding LDAP Entry" and Do not make this an LDAP Associated account in admin/people/create form
     -- is this even allowable?  What's the use case for this?
    