<?php

/**
 * @file
 * Install, update and uninstall functions for the LDAP User module.
 */

/**
 * Implements hook_install().
 */
function ldap_user_install() {

  // foreach (ldap_user_user_entity_fields() as $field_id => $field_conf) {
  //   $field_info = field_info_field($field_id);
  //   if (!$field_info) {
  //     field_create_field($field_conf['field']);
  //     field_create_instance($field_conf['instance']);
  //   }
  // }

  // // make ldap user weight slightly less than other ldap modules so it can load
  // // user's associated ldap data first and save on ldap queries.

  // db_query("UPDATE {system} SET weight = -1 WHERE name = 'ldap_user'");

  // _ldap_user_install_update_authmap();
  \Drupal::service('router.builder')->rebuild();


}

function _ldap_user_install_update_authmap() {
  db_update('authmap')
  ->fields(
    array(
      'module' => 'ldap_user',
    )
  )
  ->condition('module', 'ldap_authentication')
  ->execute();

}

/**
 * Implements hook_uninstall().
 */
function ldap_user_uninstall() {

  // foreach (ldap_user_user_entity_fields() as $field_id => $field_conf) {

  //   $instance = field_info_instance($field_conf['instance']['entity_type'], $field_conf['instance']['field_name'], $field_conf['instance']['bundle']);
  //   if ($instance) {
  //     field_delete_instance($instance);
  //   }

  //   $field_info = field_info_field($field_conf['field']['field_name']);
  //   if ($field_info) {
  //     field_delete_field($field_conf['field']['field_name']);
  //   }
  // }

  // variable_del('ldap_user_conf');
  // variable_del('ldap_user_cron_last_orphan_checked');
  // variable_del('ldap_user_cron_last_uid_checked');

}

/**
 * Converts default_file_main variable to config.
 *
 * @ingroup config_upgrade
 */
function ldap_user_update_8001() {
  if (function_exists('update_variables_to_config')) {
    update_variables_to_config('ldap_user.settings', array(
      'ldap_user_cron_last_uid_checked' => 'cron_last_uid_checked',
    ));
  }
}

/**
 * Convert ldap_user_identities table to authmap.
 * Drop ldap_user_identities table.
 */
function ldap_user_update_8301(&$sandbox) {
  // Check for externalauth module (which has been a dependency for ages).
  if ( ! \Drupal::moduleHandler()->moduleExists('externalauth') ) {
    drupal_set_message("Please install the <a href='https://drupal.org/project/externalauth'>External Auth</a> module.", "error");
    // @TODO Throw an \Drupal\Core\Utility\UpdateException
    return false;
  }

  // Iterate over the old table and create entries in the new table.
  foreach ( db_query("SELECT aid, uid, identifier FROM {ldap_user_identities}")->fetchAll() as $identity ) {
    // Load the user as the service expects an account.
    $account = user_load($identity->uid);
    $authmap = \Drupal::service('externalauth.authmap');
    $authmap->save($account, 'ldap_user', $identity->identifier);

    // Delete the row if successful.
    db_query("DELETE FROM {ldap_user_identities} WHERE aid = :aid", array(':aid' => $identity->aid));
  }

  // Drop the table if successful.
  db_query("DROP TABLE {ldap_user_identities}");
}
